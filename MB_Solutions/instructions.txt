When Running this code, you only need to run it once, then the objects it instantiates are created.
Then, replace the code and move on (or, write it all out, then run it once).

ran on https://sqliteonline.com/ originally, but presumably this can be run on VScode or terminal

1.
CREATE TABLE Customers (
  CustomerID INTEGER PRIMARY KEY,
  CustomerName VARCHAR(50) NOT NULL,
  CustomerAddress VARCHAR(200) NOT NULL
  );

2.
CREATE TABLE Products(
  ProductID INTEGER PRIMARY KEY,
  ProductName VARCHAR(100) NOT NULL,
  ProductCategory VARCHAR(100) NOT NULL
);

3.
CREATE TABLE Orders(
  OrderID INTEGER PRIMARY KEY,
  CustomerID INT,
  ProductID INTEGER,
  Quantity INT NOT NULL,
  OrderDate DATE NOT NULL,
  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomersID)
  FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
  );

4.
INSERT INTO Customers (CustomerID, CustomerName, CustomerAddress) VALUES
(100, 'John Doe', '123 Elm St, NY'),
(101, 'Jane Smith', '456 Oak St, LA'),
(102, 'Bob Johnson', '789 Pine Street, TX'),
(103, 'Alice Brown', '101 Maple St, FL')

5.
INSERT INTO Products(ProductID, ProductName, ProductCategory) VALUES
(2001, 'Widget','Gadgets'),
(2002, 'Thingamajig','Gadgets'),
(2003, 'Doohickey','Tools'),
(2004, 'Gizmo','Gadgets')

6.
INSERT INTO Orders(orderid, customerid, productid, quantity, orderdate) VALUES
(1, 100, 2001, 10, '25-05-2020')
# Alternatively, you can enter this for the same effect:
INSERT INTO Orders VALUES
(1, 100, 2001, 10, '25-05-2020')

7.
SELECT Orders.OrderID, Orders.ProductID, Orders.Quantity, Customers.CustomerName,
Customers.CustomerAddress, Orders.OrderDate
From Orders
Inner Join Customers On Orders.CustomerID = Customers.CustomerID
Where Customers.CustomerID = 100;